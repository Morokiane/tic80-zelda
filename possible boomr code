bones={}

function throwBone()
	bone={}
	bone_t=t
	bone.x=p.x+4
	bone.y=p.y
	bone.vx=dirs[bone_dir][1]*3
	bone.vy=dirs[bone_dir][2]*3
end

function checkBone()
	return bone and t-bone_t<30
end

function doBone()
	if bone then
		spr(496,bone.x-mx-3,bone.y-my-3,6,1,0,(t/4)%4)
		if t-bone_t<30 then
			if hsol(bone.x,bone.y) or bone.x//240~=p.x//240 or bone.y//136~=p.y//136 then
				for i=1,2 do
					table.insert(parts,{x=bone.x,y=bone.y,size=2,resize=-.1,c=15})
				end
				bone_t=t-40
			end
			for i,v in pairs(ents) do
				if isEnemy(v) and col2(bone.x+bone.vx,bone.y+bone.vy,8,8,v.x,v.y,v.w or 8, v.h or 8) then
					local a=angle(bone.x,bone.y,v.x,v.y)
					hurtEnt(i,a)
					bone_t=t-40
				end
			end
		end
		bone.x=bone.x+bone.vx
		bone.y=bone.y+bone.vy
		if (t/2)%8==0 then
			table.insert(parts,{x=bone.x,y=bone.y})
		end
		if t-bone_t>30 then
			local a=angle(bone.x,bone.y,p.x,p.y)
			bone.vx=cos(a)*3
			bone.vy=sin(a)*3
			if col2(bone.x,bone.y,8,8,p.x,p.y,8,8) then
				bone=nil
				sfx(58)
			end
		end
	end
end

if btnp(5) then
		--table.insert(bones,{x=p.x+4,y=p.y,vx=dirs[bone_dir][1]*3,vy=dirs[bone_dir][2]*3})
		if not bone then throwBone() sfx(57) end
	end
